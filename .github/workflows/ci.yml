name: Test

on:
  push:
    branches: ["main"]
    tags:
      - v*
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test
  build:
    name: Build ${{ matrix.platform.project }} - ${{ matrix.platform.release_for }}
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        platform:
          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            project: codebook-lsp
            bin: codebook-lsp.exe
            name: codebook-lsp-x86_64-pc-windows-msvc.zip
            command: build
          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            project: codebook-lsp
            bin: codebook-lsp
            name: codebook-lsp-x86_64-apple-darwin.tar.gz
            command: build
          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            project: codebook-lsp
            bin: codebook-lsp
            name: codebook-lsp-aarch64-apple-darwin.tar.gz
            command: build
          - release_for: Linux-x86_64-GNU
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            project: codebook-lsp
            bin: codebook-lsp
            name: codebook-lsp-x86_64-unknown-linux-gnu.tar.gz
            command: build
          - release_for: Linux-aarch64-GNU
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            project: codebook-lsp
            bin: codebook-lsp
            name: codebook-lsp-aarch64-unknown-linux-gnu.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin ${{ matrix.platform.project }}"
          strip: true
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}-${{ matrix.platform.target }}
          path: ${{ matrix.platform.name }}
  release:
    name: Release
    needs:
      - build
      - test
    # if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: codebook-lsp*
      - name: ls
        run: ls -laR
      - name: Make release
        uses: softprops/action-gh-release@v2
        with:
          files: codebook-lsp*/*
          prerelease: true
          generate_release_notes: true
          draft: false
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
